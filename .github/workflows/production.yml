name: production
on: [push]
jobs:
  test:
    name: test
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            backend/target/            
          key: cachev
          restore-keys: ${{ runner.os }}-cargo-
      - run: |
          cd backend 
          cargo test --verbose --all

  build_frontend:
    name: build_frontend
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4.0.2
      - run: |
          cd frontend 
          npm install 
          npm run make -- --platform=win32 
          cd ..
      - uses: actions/upload-artifact@v4
        with:
          name: frontend
          path: frontend/out/make/zip/win32/x64/electron-refactor-win32-x64-*.*.*.zip

  build_backend:
    name: build_backend
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            backend/target/            
          key: cachev
          restore-keys: ${{ runner.os }}-cargo-
      - run: |
          cd backend 
          cargo build --verbose --target x86_64-pc-windows-msvc --bin sh35-backend --all --release 
          cd ..
      - uses: actions/upload-artifact@v4
        with:
          name: backend
          path: backend/target/x86_64-pc-windows-msvc/release/sh35-backend.exe

  bundle:
    name: bundle
    needs: [build_frontend, build_backend]
    runs-on: windows-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: .
      - run: |
          mkdir frontend_extract
          7z x -o"/frontend_extract" frontend/*.zip
          echo "FOOTEXT"
          dir
          dir
          cd frontend_extract
          dir
          dir

         
