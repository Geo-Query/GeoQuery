stages:
  - test
  - build
  - structure

test_job:
  stage: test
  image: rust:latest
  before_script:
    - cd backend
    - rustc --version
    - cargo --version
    - cargo build --verbose --all
  script:
    - cargo test --verbose --all

build_backend:
  stage: build
  before_script:
    - rustup target add x86_64-pc-windows-gnu
    - cd backend
    - rustc --version
    - cargo --version
    - tree
  script:
    - cargo build --verbose --target x86_64-pc-windows-gnu --bin sh35-backend --all --release
    - tree
  artifacts:
    name: "backend_prototype"
    untracked: false
    when: on_success
    paths:
      - "backend/target/x86_64-pc-windows-gnu/release/sh35-backend.exe"

build_frontend:
  stage: build
  before_script:
    - cd frontend
    - npm install
    - tree
  script:
    - npm run make -- --platform=win32
  artifacts:
    name: "electron_prototype"
    untracked: false
    when: on_success
    paths:
      - "frontend/out/make/zip/win32/x64/electron-refactor-win32-x64-*.*.*.zip"

build_structure:
  stage: structure
  script:
    - mkdir structured_build
    - cp frontend/out/make/zip/win32/x64/electron-refactor-win32-x64-*.*.*.zip structured_build/frontend.zip
    - cp backend/target/x86_64-pc-windows-gnu/release/sh35-backend.exe structured_build/backend.exe
    - cd structured_build
    - mkdir final_build
    - mkdir final_build/frontend
    - unzip -d electron_unpack frontend.zip
    - cp -r electron_unpack/electron-refactor-win32-x64/* final_build/frontend/
    - cp backend.exe "final_build/Start Geoquery.exe"
    - cd final_build
    - zip -r GeoQuery.zip .
  dependencies:
    - build_frontend
    - build_backend
  artifacts:
    name: "GeoQuery"
    untracked: false
    when: on_success
    paths:
      - "structured_build/final_build/GeoQuery.zip"
